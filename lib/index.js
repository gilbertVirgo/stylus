"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __importDefault(require("lodash"));
exports.array = [
    "align-content", "align-items", "align-self", "all", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "azimuth", "backface-visibility", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "background", "bleed", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-bottom", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-source", "border-image-slice", "border-image-width", "border-left-color", "border-left-style", "border-left-width", "border-left", "border-radius", "border-right-color", "border-right-style", "border-right-width", "border-right", "border-spacing", "border-style", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-top", "border-width", "border", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "color", "columns", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "content", "counter-increment", "counter-reset", "cue-after", "cue-before", "cue", "cursor", "direction", "display", "elevation", "empty-cells", "filter", "flex", "flex-basis", "flex-direction", "font-feature-settings", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "font-family", "font-kerning", "font-language-override", "font-size-adjust", "font-size", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-alternates", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-weight", "font", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column-end", "grid-column-gap", "grid-column-start", "grid-column", "grid-gap", "grid-row-end", "grid-row-gap", "grid-row-start", "grid-row", "grid-template-areas", "grid-template-columns", "grid-template-rows", "grid-template", "grid", "hanging-punctuation", "height", "hyphens", "isolation", "justify-content", "justify-items", "justify-self", "left", "letter-spacing", "line-break", "line-height", "list-style-image", "list-style-position", "list-style-type", "list-style", "margin-bottom", "margin-left", "margin-right", "margin-top", "margin", "marker-offset", "marks", "max-height", "max-width", "min-height", "min-width", "mix-blend-mode", "nav-up", "nav-down", "nav-left", "nav-right", "opacity", "order", "orphans", "outline-color", "outline-offset", "outline-style", "outline-width", "outline", "overflow", "overflow-wrap", "overflow-x", "overflow-y", "padding-bottom", "padding-left", "padding-right", "padding-top", "padding", "page-break-after", "page-break-before", "page-break-inside", "page", "pause-after", "pause-before", "pause", "perspective", "perspective-origin", "pitch-range", "pitch", "place-content", "place-items", "place-self", "play-during", "position", "quotes", "resize", "rest-after", "rest-before", "rest", "richness", "right", "size", "speak-header", "speak-numeral", "speak-punctuation", "speak", "speech-rate", "stress", "tab-size", "table-layout", "text-align", "text-align-last", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-skip", "text-decoration-style", "text-indent", "text-overflow", "text-shadow", "text-transform", "text-underline-position", "top", "transform", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "z-index", "alignContent", "alignItems", "alignSelf", "animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction", "backfaceVisibility", "backgroundAttachment", "backgroundBlendMode", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPosition", "backgroundRepeat", "backgroundSize", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomStyle", "borderBottomWidth", "borderBottom", "borderCollapse", "borderColor", "borderImage", "borderImageOutset", "borderImageRepeat", "borderImageSource", "borderImageSlice", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderLeft", "borderRadius", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderRight", "borderSpacing", "borderStyle", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopStyle", "borderTopWidth", "borderTop", "borderWidth", "boxDecorationBreak", "boxShadow", "boxSizing", "breakAfter", "breakBefore", "breakInside", "captionSide", "caretColor", "columnCount", "columnFill", "columnGap", "columnRule", "columnRuleColor", "columnRuleStyle", "columnRuleWidth", "columnSpan", "columnWidth", "counterIncrement", "counterReset", "cueAfter", "cueBefore", "emptyCells", "flexBasis", "flexDirection", "fontFeatureSettings", "flexFlow", "flexGrow", "flexShrink", "flexWrap", "fontFamily", "fontKerning", "fontLanguageOverride", "fontSizeAdjust", "fontSize", "fontStretch", "fontStyle", "fontSynthesis", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "gridArea", "gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridColumnEnd", "gridColumnGap", "gridColumnStart", "gridColumn", "gridGap", "gridRowEnd", "gridRowGap", "gridRowStart", "gridRow", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows", "gridTemplate", "hangingPunctuation", "justifyContent", "justifyItems", "justifySelf", "letterSpacing", "lineBreak", "lineHeight", "listStyleImage", "listStylePosition", "listStyleType", "listStyle", "marginBottom", "marginLeft", "marginRight", "marginTop", "markerOffset", "maxHeight", "maxWidth", "minHeight", "minWidth", "mixBlendMode", "navUp", "navDown", "navLeft", "navRight", "outlineColor", "outlineOffset", "outlineStyle", "outlineWidth", "overflowWrap", "overflowX", "overflowY", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "pageBreakAfter", "pageBreakBefore", "pageBreakInside", "pauseAfter", "pauseBefore", "perspectiveOrigin", "pitchRange", "placeContent", "placeItems", "placeSelf", "playDuring", "restAfter", "restBefore", "speakHeader", "speakNumeral", "speakPunctuation", "speechRate", "tabSize", "tableLayout", "textAlign", "textAlignLast", "textDecoration", "textDecorationColor", "textDecorationLine", "textDecorationSkip", "textDecorationStyle", "textIndent", "textOverflow", "textShadow", "textTransform", "textUnderlinePosition", "transformOrigin", "transformStyle", "transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction", "unicodeBidi", "verticalAlign", "voiceBalance", "voiceDuration", "voiceFamily", "voicePitch", "voiceRange", "voiceRate", "voiceStress", "voiceVolume", "whiteSpace", "willChange", "wordBreak", "wordSpacing", "wordWrap", "zIndex"
];
exports.parse = function (props) {
    var style = {};
    // Inline gets priority
    Object.keys(props).forEach(function (key) {
        var cc = lodash_1.default.camelCase(key);
        if (exports.array.includes(cc)) {
            style[cc] = props[cc];
        }
    });
    return style;
};
